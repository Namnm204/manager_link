{"version":3,"file":"fetch-metadata.cjs.development.js","sources":["../src/helpers.ts","../src/fetchMetadata.ts","../src/index.ts"],"sourcesContent":["import UrlPattern from 'url-pattern'\nimport { AllowedPath, Config, Request } from './types'\n\nconst CONFIG_DEFAULTS: Config = {\n  allowedFetchSites: ['same-origin', 'same-site', 'none'],\n  disallowedNavigationRequests: ['object', 'embed'],\n  allowedPaths: [],\n  errorStatusCode: 403,\n  // @ts-expect-error\n  onError: (req, res, next, options) => {\n    res.statusCode = options.errorStatusCode\n    res.end()\n  },\n}\n\nexport const getConfigOptions = (config: Partial<Config>): Config => {\n  return Object.assign({}, CONFIG_DEFAULTS, config)\n}\n\nconst extractHeader = (req: Request, header: string): string => {\n  const reqHeader = req.headers[header]\n  return Array.isArray(reqHeader) ? reqHeader.join(',') : reqHeader || ''\n}\n\nexport const getSecFetchHeaders = (req: Request) => {\n  return {\n    secFetchSite: extractHeader(req, 'sec-fetch-site').toLowerCase(),\n    secFetchMode: extractHeader(req, 'sec-fetch-mode').toLowerCase(),\n    secFetchDest: extractHeader(req, 'sec-fetch-dest').toLowerCase(),\n  }\n}\n\nconst isString = (str: any): str is string => {\n  return typeof str === 'string'\n}\n\nexport const matchAllowedURL = (\n  list: (string | AllowedPath)[],\n  req: Request\n): boolean => {\n  if (!Array.isArray(list)) return false\n\n  let { url = '', method = '' } = req\n\n  method = method.toUpperCase()\n\n  const match = list.find(item => {\n    const allowedPath: AllowedPath = isString(item) ? { path: item } : item\n\n    if (isString(allowedPath.method)) {\n      if (allowedPath.method.toUpperCase() !== method) {\n        return false\n      }\n    }\n\n    const pattern = new UrlPattern(allowedPath.path)\n    return !!pattern.match(url)\n  })\n\n  return !!match\n}\n","import { Config, Request, Response, NextFunction } from './types'\nimport {\n  getConfigOptions,\n  getSecFetchHeaders,\n  matchAllowedURL,\n} from './helpers'\n\nexport function fetchMetadata(config: Partial<Config> = {}) {\n  const options = getConfigOptions(config)\n\n  return function middleware(req: Request, res: Response, next: NextFunction) {\n    const { secFetchSite, secFetchMode, secFetchDest } = getSecFetchHeaders(req)\n\n    // Backwards compatibility for older browsers not supporting fetch metadata headers\n    if (!secFetchSite) {\n      return next()\n    }\n\n    // Allow requests from same full- or sub-domain as well as direct navigation\n    if (\n      Array.isArray(options.allowedFetchSites) &&\n      options.allowedFetchSites.includes(secFetchSite)\n    ) {\n      return next()\n    }\n\n    // Allow simple top-level navigation and iframing (except for <object> and <embed> nav requests by default)\n    if (\n      secFetchMode === 'navigate' &&\n      req.method?.toUpperCase() === 'GET' &&\n      Array.isArray(options.disallowedNavigationRequests) &&\n      !options.disallowedNavigationRequests.includes(secFetchDest)\n    ) {\n      return next()\n    }\n\n    // Explicitly allowed paths\n    if (matchAllowedURL(options.allowedPaths, req)) {\n      return next()\n    }\n\n    options.onError(req, res, next, options)\n  }\n}\n","import { fetchMetadata } from './fetchMetadata'\nexport { Config } from './types'\n\nmodule.exports = fetchMetadata\nexport default fetchMetadata\n"],"names":["CONFIG_DEFAULTS","allowedFetchSites","disallowedNavigationRequests","allowedPaths","errorStatusCode","onError","req","res","next","options","statusCode","end","getConfigOptions","config","Object","assign","extractHeader","header","reqHeader","headers","Array","isArray","join","getSecFetchHeaders","secFetchSite","toLowerCase","secFetchMode","secFetchDest","isString","str","matchAllowedURL","list","url","method","toUpperCase","match","find","item","allowedPath","path","pattern","UrlPattern","fetchMetadata","middleware","includes","module","exports"],"mappings":"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"}